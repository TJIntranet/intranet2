Directory hierarchy:
/modules/ -- most PHP goes in here. Any module, core, or helper classes go here.
/www/ -- Files that are always accessible to users, with no need for auth.
/templates/ -- Smarty template files.
/mysql/ -- Scripts for making/defining the mysql tables.
/smarty/ -- PHP files for defining custom smarty tags and functions.
functions.inc.php5 -- globally available functions and such.

We use Git for source management.

To get started:
git clone /shared/git/intranet2.git

To commit:
./commit
Arguments passed to ./commit will be passed to git commit ([options] [filenames])

To update:
./update
Arguments passed to ./update will be passed to git pull.

Note that these tools will update or commit your ENTIRE repository.  ./commit can be passed filenames or directories as arguments, but ./update cannot.  So, please exercise caution.

Also, note that files you create won't be committed until you use 'git add' on them.

Summary of things you need installed to work on AND RUN i2 from home:
- Apache 2.2+
- PHP 5.4+ with apache2 support
- mod_rewrite  
- Python 2.7
- Meld, xxdiff, kdiff3, or some type of decent merge program 
- Git
- MySQL: you need the user iodine, with the correct password, and the database 'iodine'.


You'll only be able to log in as 'guest', unless you hack kinit.  Remember to source the MySQL files in mysql/ to create the necessary databases.

Config:

To configure Intranet2 for use in your local directory, just run ./setup .
If changes are made to the htaccess or config.ini files by others, then you
will need to run this script again. If suddenly everything stops working, try
running that script to see if it makes things work again.

To create documentation:

Run 'makedoc.sh' in the root directory of your intranet2 copy, preferably the
one that's in your web-docs, for reasons below.

makedoc.sh reads the files from the current directory and places the
documentation in ../doc relative to the current directory. So, if you're in
~/web-docs/i2/, it will place the documentation in ~/web-docs/doc/, so now it's
easily accessible from your iodine /~username space (that's why you should be
in your web-docs).

This creates documentation for your personal space. Overall documentation will
be generated every once in a while by someone who has root access on iodine.
